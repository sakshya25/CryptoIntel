{"ast":null,"code":"export function isEqualArrays(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n  if (!arrA || !arrB) {\n    return false;\n  }\n  var len = arrA.length;\n  if (arrB.length !== len) {\n    return false;\n  } // eslint-disable-next-line no-plusplus\n\n  for (var i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["isEqualArrays","arrA","arrB","len","length","i"],"sources":["D:/projects/CryptoIntel/node_modules/rc-cascader/es/utils.js"],"sourcesContent":["export function isEqualArrays(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  } // eslint-disable-next-line no-plusplus\n\n\n  for (var i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACxC,IAAID,IAAI,KAAKC,IAAI,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,IAAI,CAACD,IAAI,IAAI,CAACC,IAAI,EAAE;IAClB,OAAO,KAAK;EACd;EAEA,IAAIC,GAAG,GAAGF,IAAI,CAACG,MAAM;EAErB,IAAIF,IAAI,CAACE,MAAM,KAAKD,GAAG,EAAE;IACvB,OAAO,KAAK;EACd,CAAC,CAAC;;EAGF,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IAC5B,IAAIJ,IAAI,CAACI,CAAC,CAAC,KAAKH,IAAI,CAACG,CAAC,CAAC,EAAE;MACvB,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module"}