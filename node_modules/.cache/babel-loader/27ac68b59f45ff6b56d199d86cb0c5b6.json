{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigConsumer } from '../config-provider';\nimport Element from './Element';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonInput from './Input';\nimport SkeletonImage from './Image';\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nvar Skeleton = function Skeleton(props) {\n  var renderSkeleton = function renderSkeleton(_ref) {\n    var getPrefixCls = _ref.getPrefixCls,\n      direction = _ref.direction;\n    var customizePrefixCls = props.prefixCls,\n      loading = props.loading,\n      className = props.className,\n      children = props.children,\n      avatar = props.avatar,\n      title = props.title,\n      paragraph = props.paragraph,\n      active = props.active,\n      round = props.round;\n    var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n    if (loading || !('loading' in props)) {\n      var _classNames;\n      var hasAvatar = !!avatar;\n      var hasTitle = !!title;\n      var hasParagraph = !!paragraph; // Avatar\n\n      var avatarNode;\n      if (hasAvatar) {\n        var avatarProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-avatar\")\n        }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n        avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-header\")\n        }, /*#__PURE__*/React.createElement(Element, avatarProps));\n      }\n      var contentNode;\n      if (hasTitle || hasParagraph) {\n        // Title\n        var $title;\n        if (hasTitle) {\n          var titleProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-title\")\n          }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n          $title = /*#__PURE__*/React.createElement(Title, titleProps);\n        } // Paragraph\n\n        var paragraphNode;\n        if (hasParagraph) {\n          var paragraphProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n          }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n          paragraphNode = /*#__PURE__*/React.createElement(Paragraph, paragraphProps);\n        }\n        contentNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-content\")\n        }, $title, paragraphNode);\n      }\n      var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-round\"), round), _classNames), className);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cls\n      }, avatarNode, contentNode);\n    }\n    return children;\n  };\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, renderSkeleton);\n};\nSkeleton.defaultProps = {\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nexport default Skeleton;","map":{"version":3,"names":["_defineProperty","_extends","_typeof","React","classNames","Title","Paragraph","ConfigConsumer","Element","SkeletonAvatar","SkeletonButton","SkeletonInput","SkeletonImage","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","renderSkeleton","_ref","getPrefixCls","direction","customizePrefixCls","prefixCls","loading","className","children","avatar","title","paragraph","active","round","_classNames","avatarNode","avatarProps","concat","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","defaultProps","Button","Avatar","Input","Image"],"sources":["D:/projects/CryptoIntel/node_modules/antd/es/skeleton/Skeleton.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigConsumer } from '../config-provider';\nimport Element from './Element';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonInput from './Input';\nimport SkeletonImage from './Image';\n\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function Skeleton(props) {\n  var renderSkeleton = function renderSkeleton(_ref) {\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n    var customizePrefixCls = props.prefixCls,\n        loading = props.loading,\n        className = props.className,\n        children = props.children,\n        avatar = props.avatar,\n        title = props.title,\n        paragraph = props.paragraph,\n        active = props.active,\n        round = props.round;\n    var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n    if (loading || !('loading' in props)) {\n      var _classNames;\n\n      var hasAvatar = !!avatar;\n      var hasTitle = !!title;\n      var hasParagraph = !!paragraph; // Avatar\n\n      var avatarNode;\n\n      if (hasAvatar) {\n        var avatarProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-avatar\")\n        }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n\n        avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-header\")\n        }, /*#__PURE__*/React.createElement(Element, avatarProps));\n      }\n\n      var contentNode;\n\n      if (hasTitle || hasParagraph) {\n        // Title\n        var $title;\n\n        if (hasTitle) {\n          var titleProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-title\")\n          }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n\n          $title = /*#__PURE__*/React.createElement(Title, titleProps);\n        } // Paragraph\n\n\n        var paragraphNode;\n\n        if (hasParagraph) {\n          var paragraphProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n          }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n\n          paragraphNode = /*#__PURE__*/React.createElement(Paragraph, paragraphProps);\n        }\n\n        contentNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-content\")\n        }, $title, paragraphNode);\n      }\n\n      var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-round\"), round), _classNames), className);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cls\n      }, avatarNode, contentNode);\n    }\n\n    return children;\n  };\n\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, renderSkeleton);\n};\n\nSkeleton.defaultProps = {\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nexport default Skeleton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}