{"ast":null,"code":"/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = \"animation-\".concat(transition);\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._each('register', args);\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._each('unregister', args);\n  }\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._each('register', args, this.controllers);\n  }\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this._each('register', args, this.elements);\n  }\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    this._each('register', args, this.plugins);\n  }\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[\"datasets.\".concat(datasetType), '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), () => [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), () => [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), () => [[\"plugins.\".concat(id), ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.5.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(_ref => {\n      let {\n        datasetIndex,\n        index\n      } = _ref;\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref2 => {\n    let {\n      start,\n      end\n    } = _ref2;\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(_ref3 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref3;\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref4) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref4;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return me._cache.data = me.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","_isDomSupported","J","log10","K","_factorize","L","finiteOrDefault","M","callback","N","_addGrace","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","clipArea","V","renderText","W","unclipArea","X","toFont","Y","_toLeftRightCenter","Z","_alignStartEnd","$","overrides","a0","merge","a1","_capitalize","a2","descriptors","a3","isFunction","a4","_attachContext","a5","_createResolver","a6","_descriptors","a7","mergeIf","a8","uid","a9","debounce","aa","retinaScale","ab","clearCanvas","ac","setsEqual","ad","_elementsEqual","ae","getAngleFromPoint","af","_readValueToProps","ag","_updateBezierControlPoints","ah","_computeSegments","ai","_boundSegments","aj","_steppedInterpolation","ak","_bezierInterpolation","al","_pointInLine","am","_steppedLineTo","an","_bezierCurveTo","ao","drawPoint","ap","addRoundedRectPath","aq","toTRBL","ar","toTRBLCorners","as","_boundSegment","at","_normalizeAngle","au","getRtlAdapter","av","overrideTextDirection","aw","_textX","ax","restoreTextDirection","ay","noop","az","distanceBetweenPoints","aA","_setMinAndMaxByKey","aB","niceNum","aC","almostWhole","aD","almostEquals","aE","_decimalPlaces","aF","_longestText","aG","_filterBetween","aH","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","hidden","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","inflateAmount","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","_ref2","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref3","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref4","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["D:/projects/CryptoIntel/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}