{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n  var _super = _createSuper(Tree);\n  function Tree() {\n    var _this;\n    _classCallCheck(this, Tree);\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.listRef = /*#__PURE__*/React.createRef();\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n        expandedKeys = _this$state.expandedKeys,\n        keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n      _this.setState({\n        dragging: true,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n      _this.setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n        expandedKeys = _this$state2.expandedKeys,\n        keyEntities = _this$state2.keyEntities,\n        dragChildrenKeys = _this$state2.dragChildrenKeys,\n        flattenNodes = _this$state2.flattenNodes,\n        indent = _this$state2.indent;\n      var _this$props = _this.props,\n        onDragEnter = _this$props.onDragEnter,\n        onExpand = _this$props.onExpand,\n        allowDrop = _this$props.allowDrop,\n        direction = _this$props.direction;\n      var pos = node.props.pos;\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        dragNode = _assertThisInitialize.dragNode;\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n        dropPosition = _calcDropPosition.dropPosition,\n        dropLevelOffset = _calcDropPosition.dropLevelOffset,\n        dropTargetKey = _calcDropPosition.dropTargetKey,\n        dropContainerKey = _calcDropPosition.dropContainerKey,\n        dropTargetPos = _calcDropPosition.dropTargetPos,\n        dropAllowed = _calcDropPosition.dropAllowed,\n        dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n      if (!dragNode ||\n      // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 ||\n      // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n        return;\n      } // Side effect for delay drag\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n          var entity = keyEntities[node.props.eventKey];\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n        return;\n      } // Update drag over node and drag state\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n        dragChildrenKeys = _this$state3.dragChildrenKeys,\n        flattenNodes = _this$state3.flattenNodes,\n        keyEntities = _this$state3.keyEntities,\n        expandedKeys = _this$state3.expandedKeys,\n        indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n        onDragOver = _this$props2.onDragOver,\n        allowDrop = _this$props2.allowDrop,\n        direction = _this$props2.direction;\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n        dragNode = _assertThisInitialize2.dragNode;\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n        dropPosition = _calcDropPosition2.dropPosition,\n        dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n        dropTargetKey = _calcDropPosition2.dropTargetKey,\n        dropContainerKey = _calcDropPosition2.dropContainerKey,\n        dropAllowed = _calcDropPosition2.dropAllowed,\n        dropTargetPos = _calcDropPosition2.dropTargetPos,\n        dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n      if (!dragNode || dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.setState({\n            dropPosition: null,\n            dropLevelOffset: null,\n            dropTargetKey: null,\n            dropContainerKey: null,\n            dropTargetPos: null,\n            dropAllowed: false,\n            dragOverNodeKey: null\n          });\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n      _this.setState({\n        dragOverNodeKey: null\n      });\n      _this.cleanDragState();\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n      _this.dragNode = null;\n    };\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n        dragChildrenKeys = _this$state4.dragChildrenKeys,\n        dropPosition = _this$state4.dropPosition,\n        dropTargetKey = _this$state4.dropTargetKey,\n        dropTargetPos = _this$state4.dropTargetPos,\n        dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n      _this.setState({\n        dragOverNodeKey: null\n      });\n      _this.cleanDragState();\n      if (dropTargetKey === null) return;\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n      _this.dragNode = null;\n    };\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n      if (dragging) {\n        _this.setState({\n          dragging: false,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n      _this.dragStartMousePosition = null;\n    };\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props3 = _this.props,\n        onSelect = _this$props3.onSelect,\n        multiple = _this$props3.multiple;\n      var selected = treeNode.selected,\n        key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state5 = _this.state,\n        keyEntities = _this$state5.keyEntities,\n        oriCheckedKeys = _this$state5.checkedKeys,\n        oriHalfCheckedKeys = _this$state5.halfCheckedKeys;\n      var _this$props4 = _this.props,\n        checkStrictly = _this$props4.checkStrictly,\n        onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n          _checkedKeys = _conductCheck.checkedKeys,\n          _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n            loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n            _ref$loadingKeys = _ref.loadingKeys,\n            loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n            loadData = _this$props5.loadData,\n            onLoad = _this$props5.onLoad;\n          var key = treeNode.key;\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state6 = _this.state,\n              currentLoadedKeys = _this$state6.loadedKeys,\n              currentLoadingKeys = _this$state6.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n            resolve();\n          }).catch(function (e) {\n            var currentLoadingKeys = _this.state.loadingKeys;\n            var newLoadingKeys = arrDel(currentLoadingKeys, key);\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n      _this.setState({\n        focused: true\n      });\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n      _this.setState({\n        focused: false\n      });\n      _this.onActiveChange(null);\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n        expandedKeys = _this$state7.expandedKeys,\n        selectedKeys = _this$state7.selectedKeys,\n        loadedKeys = _this$state7.loadedKeys,\n        loadingKeys = _this$state7.loadingKeys,\n        checkedKeys = _this$state7.checkedKeys,\n        halfCheckedKeys = _this$state7.halfCheckedKeys,\n        dragOverNodeKey = _this$state7.dragOverNodeKey,\n        dropPosition = _this$state7.dropPosition,\n        keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props6 = _this.props,\n        onExpand = _this$props6.onExpand,\n        loadData = _this$props6.loadData;\n      var key = treeNode.key,\n        expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n      _this.setExpandedKeys(expandedKeys);\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n      if (activeKey === newActiveKey) {\n        return;\n      }\n      _this.setState({\n        activeKey: newActiveKey\n      });\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n    _this.getActiveItem = function () {\n      var _this$state8 = _this.state,\n        activeKey = _this$state8.activeKey,\n        flattenNodes = _this$state8.flattenNodes;\n      if (activeKey === null) {\n        return null;\n      }\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n    _this.offsetActiveKey = function (offset) {\n      var _this$state9 = _this.state,\n        flattenNodes = _this$state9.flattenNodes,\n        activeKey = _this$state9.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n      if (item) {\n        var key = item.data.key;\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n    _this.onKeyDown = function (event) {\n      var _this$state10 = _this.state,\n        activeKey = _this$state10.activeKey,\n        expandedKeys = _this$state10.expandedKeys,\n        checkedKeys = _this$state10.checkedKeys;\n      var _this$props7 = _this.props,\n        onKeyDown = _this$props7.onKeyDown,\n        checkable = _this$props7.checkable,\n        selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n      var activeItem = _this.getActiveItem();\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n              event.preventDefault();\n              break;\n            }\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n              break;\n            }\n        }\n      }\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      if (_this.destroyed) {\n        return;\n      }\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n        needSync = true;\n        newState[name] = state[name];\n      });\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n    return _this;\n  }\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n      var _this$state11 = this.state,\n        focused = _this$state11.focused,\n        flattenNodes = _this$state11.flattenNodes,\n        keyEntities = _this$state11.keyEntities,\n        dragging = _this$state11.dragging,\n        activeKey = _this$state11.activeKey,\n        dropLevelOffset = _this$state11.dropLevelOffset,\n        dropContainerKey = _this$state11.dropContainerKey,\n        dropTargetKey = _this$state11.dropTargetKey,\n        dropPosition = _this$state11.dropPosition,\n        dragOverNodeKey = _this$state11.dragOverNodeKey,\n        indent = _this$state11.indent;\n      var _this$props8 = this.props,\n        prefixCls = _this$props8.prefixCls,\n        className = _this$props8.className,\n        style = _this$props8.style,\n        showLine = _this$props8.showLine,\n        focusable = _this$props8.focusable,\n        _this$props8$tabIndex = _this$props8.tabIndex,\n        tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n        selectable = _this$props8.selectable,\n        showIcon = _this$props8.showIcon,\n        icon = _this$props8.icon,\n        switcherIcon = _this$props8.switcherIcon,\n        draggable = _this$props8.draggable,\n        checkable = _this$props8.checkable,\n        checkStrictly = _this$props8.checkStrictly,\n        disabled = _this$props8.disabled,\n        motion = _this$props8.motion,\n        loadData = _this$props8.loadData,\n        filterTreeNode = _this$props8.filterTreeNode,\n        height = _this$props8.height,\n        itemHeight = _this$props8.itemHeight,\n        virtual = _this$props8.virtual,\n        titleRender = _this$props8.titleRender,\n        dropIndicatorRender = _this$props8.dropIndicatorRender,\n        onContextMenu = _this$props8.onContextMenu,\n        direction = _this$props8.direction;\n      var domProps = getDataAndAria(this.props);\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n      return newState;\n    }\n  }]);\n  return Tree;\n}(React.Component);\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;","map":{"version":3,"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","React","KeyCode","warning","classNames","TreeContext","getDataAndAria","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","DropIndicator","Tree","_React$Component","_super","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","destroyed","delayedDragEnterLogic","state","keyEntities","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","dragStartMousePosition","dragNode","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","x","clientX","y","clientY","newExpandedKeys","setState","current","getIndentWidth","setExpandedKeys","window","addEventListener","onWindowDragEnd","onNodeDragEnter","_this$state2","_this$props","onDragEnter","onExpand","allowDrop","direction","pos","_assertThisInitialize","_calcDropPosition","indexOf","Object","keys","forEach","key","clearTimeout","persist","setTimeout","entity","children","expanded","nativeEvent","onNodeDragOver","_this$state3","_this$props2","onDragOver","_assertThisInitialize2","_calcDropPosition2","onNodeDragLeave","onDragLeave","onNodeDragEnd","removeEventListener","outsideTree","undefined","onDragEnd","cleanDragState","onNodeDrop","_this$getActiveItem","_this$state4","onDrop","abstractDropNodeProps","getTreeNodeRequiredProps","active","getActiveItem","data","dropToChild","posArr","dropResult","dragNodesKeys","dropToGap","Number","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props3","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","filter","setUncontrolledState","onNodeCheck","checked","_this$state5","oriCheckedKeys","oriHalfCheckedKeys","_this$props4","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","from","checkedNodesPositions","push","onNodeLoad","Promise","resolve","reject","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props5","loadData","onLoad","promise","then","_this$state6","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","catch","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","_this$state7","onNodeExpand","_this$props6","index","targetExpanded","loadPromise","newFlattenTreeData","currentExpandedKeys","expandedKeysToRestore","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","_this$state8","find","_ref2","offsetActiveKey","offset","_this$state9","findIndex","_ref3","item","onKeyDown","_this$state10","_this$props7","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","forceState","needSync","allPassed","newState","name","scroll","value","componentWillUnmount","render","_classNames","_this$state11","_this$props8","prefixCls","className","style","showLine","focusable","_this$props8$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","dropIndicatorRender","onContextMenu","domProps","createElement","Provider","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"sources":["D:/projects/CryptoIntel/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var pos = node.props.pos;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode;\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if (!dragNode || // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (!dragNode || dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.setState({\n            dropPosition: null,\n            dropLevelOffset: null,\n            dropTargetKey: null,\n            dropContainerKey: null,\n            dropTargetPos: null,\n            dropAllowed: false,\n            dragOverNodeKey: null\n          });\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          oriCheckedKeys = _this$state5.checkedKeys,\n          oriHalfCheckedKeys = _this$state5.halfCheckedKeys;\n      var _this$props4 = _this.props,\n          checkStrictly = _this$props4.checkStrictly,\n          onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n              loadData = _this$props5.loadData,\n              onLoad = _this$props5.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state6 = _this.state,\n                currentLoadedKeys = _this$state6.loadedKeys,\n                currentLoadingKeys = _this$state6.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          }).catch(function (e) {\n            var currentLoadingKeys = _this.state.loadingKeys;\n            var newLoadingKeys = arrDel(currentLoadingKeys, key);\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n          expandedKeys = _this$state7.expandedKeys,\n          selectedKeys = _this$state7.selectedKeys,\n          loadedKeys = _this$state7.loadedKeys,\n          loadingKeys = _this$state7.loadingKeys,\n          checkedKeys = _this$state7.checkedKeys,\n          halfCheckedKeys = _this$state7.halfCheckedKeys,\n          dragOverNodeKey = _this$state7.dragOverNodeKey,\n          dropPosition = _this$state7.dropPosition,\n          keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props6 = _this.props,\n          onExpand = _this$props6.onExpand,\n          loadData = _this$props6.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state8 = _this.state,\n          activeKey = _this$state8.activeKey,\n          flattenNodes = _this$state8.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state9 = _this.state,\n          flattenNodes = _this$state9.flattenNodes,\n          activeKey = _this$state9.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state10 = _this.state,\n          activeKey = _this$state10.activeKey,\n          expandedKeys = _this$state10.expandedKeys,\n          checkedKeys = _this$state10.checkedKeys;\n      var _this$props7 = _this.props,\n          onKeyDown = _this$props7.onKeyDown,\n          checkable = _this$props7.checkable,\n          selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.destroyed) {\n        return;\n      }\n\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state11 = this.state,\n          focused = _this$state11.focused,\n          flattenNodes = _this$state11.flattenNodes,\n          keyEntities = _this$state11.keyEntities,\n          dragging = _this$state11.dragging,\n          activeKey = _this$state11.activeKey,\n          dropLevelOffset = _this$state11.dropLevelOffset,\n          dropContainerKey = _this$state11.dropContainerKey,\n          dropTargetKey = _this$state11.dropTargetKey,\n          dropPosition = _this$state11.dropPosition,\n          dragOverNodeKey = _this$state11.dragOverNodeKey,\n          indent = _this$state11.indent;\n      var _this$props8 = this.props,\n          prefixCls = _this$props8.prefixCls,\n          className = _this$props8.className,\n          style = _this$props8.style,\n          showLine = _this$props8.showLine,\n          focusable = _this$props8.focusable,\n          _this$props8$tabIndex = _this$props8.tabIndex,\n          tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n          selectable = _this$props8.selectable,\n          showIcon = _this$props8.showIcon,\n          icon = _this$props8.icon,\n          switcherIcon = _this$props8.switcherIcon,\n          draggable = _this$props8.draggable,\n          checkable = _this$props8.checkable,\n          checkStrictly = _this$props8.checkStrictly,\n          disabled = _this$props8.disabled,\n          motion = _this$props8.motion,\n          loadData = _this$props8.loadData,\n          filterTreeNode = _this$props8.filterTreeNode,\n          height = _this$props8.height,\n          itemHeight = _this$props8.itemHeight,\n          virtual = _this$props8.virtual,\n          titleRender = _this$props8.titleRender,\n          dropIndicatorRender = _this$props8.dropIndicatorRender,\n          onContextMenu = _this$props8.onContextMenu,\n          direction = _this$props8.direction;\n      var domProps = getDataAndAria(this.props);\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}