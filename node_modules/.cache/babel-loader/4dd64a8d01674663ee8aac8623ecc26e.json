{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';// Note: Change v1 to v2 on rapid api\nconst cryptoApiHeaders={'x-rapidapi-host':process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,'x-rapidapi-key':process.env.REACT_APP_RAPIDAPI_KEY};const createRequest=url=>({url,headers:cryptoApiHeaders});export const cryptoApi=createApi({reducerPath:'cryptoApi',baseQuery:fetchBaseQuery({baseUrl:process.env.REACT_APP_CRYPTO_API_URL}),endpoints:builder=>({getCryptos:builder.query({query:count=>createRequest(\"/coins?limit=\".concat(count))}),getCryptoDetails:builder.query({query:coinId=>createRequest(\"/coin/\".concat(coinId))}),// Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\ngetCryptoHistory:builder.query({query:_ref=>{let{coinId,timeperiod}=_ref;return createRequest(\"coin/\".concat(coinId,\"/history?timeperiod=\").concat(timeperiod));}})// Note: To access this endpoint you need premium plan\n// getExchanges: builder.query({\n//   query: () => createRequest('/exchanges'),\n// }),\n})});export const{useGetCryptosQuery,useGetCryptoDetailsQuery,// useGetExchangesQuery,\nuseGetCryptoHistoryQuery}=cryptoApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","cryptoApiHeaders","process","env","REACT_APP_CRYPTO_RAPIDAPI_HOST","REACT_APP_RAPIDAPI_KEY","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","baseUrl","REACT_APP_CRYPTO_API_URL","endpoints","builder","getCryptos","query","count","concat","getCryptoDetails","coinId","getCryptoHistory","_ref","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery"],"sources":["D:/projects/CryptoIntel/src/services/cryptoApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n// Note: Change v1 to v2 on rapid api\r\n\r\nconst cryptoApiHeaders = {\r\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\r\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n};\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n\r\n    // Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\r\n    }),\r\n\r\n    // Note: To access this endpoint you need premium plan\r\n    // getExchanges: builder.query({\r\n    //   query: () => createRequest('/exchanges'),\r\n    // }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  // useGetExchangesQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CAExE;AAEA,KAAM,CAAAC,gBAAgB,CAAG,CACvB,iBAAiB,CAAEC,OAAO,CAACC,GAAG,CAACC,8BAA8B,CAC7D,gBAAgB,CAAEF,OAAO,CAACC,GAAG,CAACE,sBAChC,CAAC,CACD,KAAM,CAAAC,aAAa,CAAIC,GAAG,GAAM,CAAEA,GAAG,CAAEC,OAAO,CAAEP,gBAAiB,CAAC,CAAC,CAEnE,MAAO,MAAM,CAAAQ,SAAS,CAAGV,SAAS,CAAC,CACjCW,WAAW,CAAE,WAAW,CACxBC,SAAS,CAAEX,cAAc,CAAC,CAAEY,OAAO,CAAEV,OAAO,CAACC,GAAG,CAACU,wBAAyB,CAAC,CAAC,CAC5EC,SAAS,CAAGC,OAAO,GAAM,CACvBC,UAAU,CAAED,OAAO,CAACE,KAAK,CAAC,CACxBA,KAAK,CAAGC,KAAK,EAAKZ,aAAa,iBAAAa,MAAA,CAAiBD,KAAK,CAAE,CACzD,CAAC,CAAC,CAEFE,gBAAgB,CAAEL,OAAO,CAACE,KAAK,CAAC,CAC9BA,KAAK,CAAGI,MAAM,EAAKf,aAAa,UAAAa,MAAA,CAAUE,MAAM,CAAE,CACpD,CAAC,CAAC,CAEF;AACAC,gBAAgB,CAAEP,OAAO,CAACE,KAAK,CAAC,CAC9BA,KAAK,CAAEM,IAAA,MAAC,CAAEF,MAAM,CAAEG,UAAW,CAAC,CAAAD,IAAA,OAAK,CAAAjB,aAAa,SAAAa,MAAA,CAASE,MAAM,yBAAAF,MAAA,CAAuBK,UAAU,CAAE,CAAC,EACrG,CAAC,CAED;AACA;AACA;AACA;AACF,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,MAAM,CACXC,kBAAkB,CAClBC,wBAAwB,CACxB;AACAC,wBACF,CAAC,CAAGlB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}