{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport ResizeObserver from 'resize-observer-polyfill';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n  var _super = _createSuper(ReactResizeObserver);\n  function ReactResizeObserver() {\n    var _this;\n    _classCallCheck(this, ReactResizeObserver);\n    _this = _super.apply(this, arguments);\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n      var offsetWidth = target.offsetWidth,\n        offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n        _this.setState(size);\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: offsetWidth,\n              offsetHeight: offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n    return _this;\n  }\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n      var element = findDOMNode(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray(children);\n      if (childNodes.length > 1) {\n        warning(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n      var childNode = childNodes[0];\n      if ( /*#__PURE__*/React.isValidElement(childNode) && supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/React.cloneElement(childNode, {\n          ref: composeRef(ref, this.setChildNode)\n        });\n      }\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n        return /*#__PURE__*/React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n  return ReactResizeObserver;\n}(React.Component);\nReactResizeObserver.displayName = 'ResizeObserver';\nexport default ReactResizeObserver;","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_inherits","_createSuper","React","findDOMNode","toArray","warning","composeRef","supportRef","ResizeObserver","INTERNAL_PREFIX_KEY","ReactResizeObserver","_React$Component","_super","_this","apply","arguments","resizeObserver","childNode","currentElement","state","width","height","offsetHeight","offsetWidth","onResize","entries","props","target","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","setState","Promise","resolve","then","setChildNode","node","key","value","componentDidMount","onComponentUpdated","componentDidUpdate","componentWillUnmount","destroyObserver","disabled","element","elementChanged","observe","disconnect","render","children","childNodes","length","isValidElement","ref","cloneElement","map","index","concat","Component","displayName"],"sources":["D:/projects/CryptoIntel/node_modules/rc-resize-observer/es/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport ResizeObserver from 'resize-observer-polyfill';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n\n  var _super = _createSuper(ReactResizeObserver);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    _classCallCheck(this, ReactResizeObserver);\n\n    _this = _super.apply(this, arguments);\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var offsetWidth = target.offsetWidth,\n          offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: offsetWidth,\n              offsetHeight: offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = findDOMNode(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray(children);\n\n      if (childNodes.length > 1) {\n        warning(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if ( /*#__PURE__*/React.isValidElement(childNode) && supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/React.cloneElement(childNode, {\n          ref: composeRef(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n\n        return /*#__PURE__*/React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(React.Component);\n\nReactResizeObserver.displayName = 'ResizeObserver';\nexport default ReactResizeObserver;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}