{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\nimport raf from \"rc-util/es/raf\";\n/**\n * State generate. Return a `setState` but it will flush all state with one render to save perf.\n * This is not a realization of `unstable_batchedUpdates`.\n */\n\nexport function useBatchFrameState() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    forceUpdate = _useState2[1];\n  var statesRef = useRef([]);\n  var destroyRef = useRef(false);\n  var walkingIndex = 0;\n  var beforeFrameId = 0;\n  useEffect(function () {\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n  function createState(defaultValue) {\n    var myIndex = walkingIndex;\n    walkingIndex += 1; // Fill value if not exist yet\n\n    if (statesRef.current.length < myIndex + 1) {\n      statesRef.current[myIndex] = defaultValue;\n    } // Return filled as `setState`\n\n    var value = statesRef.current[myIndex];\n    function setValue(val) {\n      statesRef.current[myIndex] = typeof val === 'function' ? val(statesRef.current[myIndex]) : val;\n      raf.cancel(beforeFrameId); // Flush with batch\n\n      beforeFrameId = raf(function () {\n        if (!destroyRef.current) {\n          forceUpdate({});\n        }\n      });\n    }\n    return [value, setValue];\n  }\n  return createState;\n}","map":{"version":3,"names":["_slicedToArray","useRef","useState","useEffect","raf","useBatchFrameState","_useState","_useState2","forceUpdate","statesRef","destroyRef","walkingIndex","beforeFrameId","current","createState","defaultValue","myIndex","length","value","setValue","val","cancel"],"sources":["D:/projects/CryptoIntel/node_modules/rc-overflow/es/hooks/useBatchFrameState.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\nimport raf from \"rc-util/es/raf\";\n/**\n * State generate. Return a `setState` but it will flush all state with one render to save perf.\n * This is not a realization of `unstable_batchedUpdates`.\n */\n\nexport function useBatchFrameState() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var statesRef = useRef([]);\n  var destroyRef = useRef(false);\n  var walkingIndex = 0;\n  var beforeFrameId = 0;\n  useEffect(function () {\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n\n  function createState(defaultValue) {\n    var myIndex = walkingIndex;\n    walkingIndex += 1; // Fill value if not exist yet\n\n    if (statesRef.current.length < myIndex + 1) {\n      statesRef.current[myIndex] = defaultValue;\n    } // Return filled as `setState`\n\n\n    var value = statesRef.current[myIndex];\n\n    function setValue(val) {\n      statesRef.current[myIndex] = typeof val === 'function' ? val(statesRef.current[myIndex]) : val;\n      raf.cancel(beforeFrameId); // Flush with batch\n\n      beforeFrameId = raf(function () {\n        if (!destroyRef.current) {\n          forceUpdate({});\n        }\n      });\n    }\n\n    return [value, setValue];\n  }\n\n  return createState;\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0CAA0C;AACrE,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,GAAG,MAAM,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EACnC,IAAIC,SAAS,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxBK,UAAU,GAAGP,cAAc,CAACM,SAAS,EAAE,CAAC,CAAC;IACzCE,WAAW,GAAGD,UAAU,CAAC,CAAC,CAAC;EAE/B,IAAIE,SAAS,GAAGR,MAAM,CAAC,EAAE,CAAC;EAC1B,IAAIS,UAAU,GAAGT,MAAM,CAAC,KAAK,CAAC;EAC9B,IAAIU,YAAY,GAAG,CAAC;EACpB,IAAIC,aAAa,GAAG,CAAC;EACrBT,SAAS,CAAC,YAAY;IACpB,OAAO,YAAY;MACjBO,UAAU,CAACG,OAAO,GAAG,IAAI;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,WAAWA,CAACC,YAAY,EAAE;IACjC,IAAIC,OAAO,GAAGL,YAAY;IAC1BA,YAAY,IAAI,CAAC,CAAC,CAAC;;IAEnB,IAAIF,SAAS,CAACI,OAAO,CAACI,MAAM,GAAGD,OAAO,GAAG,CAAC,EAAE;MAC1CP,SAAS,CAACI,OAAO,CAACG,OAAO,CAAC,GAAGD,YAAY;IAC3C,CAAC,CAAC;;IAGF,IAAIG,KAAK,GAAGT,SAAS,CAACI,OAAO,CAACG,OAAO,CAAC;IAEtC,SAASG,QAAQA,CAACC,GAAG,EAAE;MACrBX,SAAS,CAACI,OAAO,CAACG,OAAO,CAAC,GAAG,OAAOI,GAAG,KAAK,UAAU,GAAGA,GAAG,CAACX,SAAS,CAACI,OAAO,CAACG,OAAO,CAAC,CAAC,GAAGI,GAAG;MAC9FhB,GAAG,CAACiB,MAAM,CAACT,aAAa,CAAC,CAAC,CAAC;;MAE3BA,aAAa,GAAGR,GAAG,CAAC,YAAY;QAC9B,IAAI,CAACM,UAAU,CAACG,OAAO,EAAE;UACvBL,WAAW,CAAC,CAAC,CAAC,CAAC;QACjB;MACF,CAAC,CAAC;IACJ;IAEA,OAAO,CAACU,KAAK,EAAEC,QAAQ,CAAC;EAC1B;EAEA,OAAOL,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module"}