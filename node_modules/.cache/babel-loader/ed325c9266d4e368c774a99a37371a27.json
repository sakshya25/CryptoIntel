{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport omit from \"rc-util/es/omit\";\nimport classNames from 'classnames';\nimport Element from './Element';\nimport { ConfigConsumer } from '../config-provider';\nvar SkeletonInput = function SkeletonInput(props) {\n  var renderSkeletonInput = function renderSkeletonInput(_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      active = props.active;\n    var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n    var otherProps = omit(props, ['prefixCls']);\n    var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cls\n    }, /*#__PURE__*/React.createElement(Element, _extends({\n      prefixCls: \"\".concat(prefixCls, \"-input\")\n    }, otherProps)));\n  };\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, renderSkeletonInput);\n};\nSkeletonInput.defaultProps = {\n  size: 'default'\n};\nexport default SkeletonInput;","map":{"version":3,"names":["_extends","_defineProperty","React","omit","classNames","Element","ConfigConsumer","SkeletonInput","props","renderSkeletonInput","_ref","getPrefixCls","customizePrefixCls","prefixCls","className","active","otherProps","cls","concat","createElement","defaultProps","size"],"sources":["D:/projects/CryptoIntel/node_modules/antd/es/skeleton/Input.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport omit from \"rc-util/es/omit\";\nimport classNames from 'classnames';\nimport Element from './Element';\nimport { ConfigConsumer } from '../config-provider';\n\nvar SkeletonInput = function SkeletonInput(props) {\n  var renderSkeletonInput = function renderSkeletonInput(_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var customizePrefixCls = props.prefixCls,\n        className = props.className,\n        active = props.active;\n    var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n    var otherProps = omit(props, ['prefixCls']);\n    var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cls\n    }, /*#__PURE__*/React.createElement(Element, _extends({\n      prefixCls: \"\".concat(prefixCls, \"-input\")\n    }, otherProps)));\n  };\n\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, renderSkeletonInput);\n};\n\nSkeletonInput.defaultProps = {\n  size: 'default'\n};\nexport default SkeletonInput;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,KAAK,EAAE;EAChD,IAAIC,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,IAAI,EAAE;IAC3D,IAAIC,YAAY,GAAGD,IAAI,CAACC,YAAY;IACpC,IAAIC,kBAAkB,GAAGJ,KAAK,CAACK,SAAS;MACpCC,SAAS,GAAGN,KAAK,CAACM,SAAS;MAC3BC,MAAM,GAAGP,KAAK,CAACO,MAAM;IACzB,IAAIF,SAAS,GAAGF,YAAY,CAAC,UAAU,EAAEC,kBAAkB,CAAC;IAC5D,IAAII,UAAU,GAAGb,IAAI,CAACK,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC;IAC3C,IAAIS,GAAG,GAAGb,UAAU,CAACS,SAAS,EAAE,EAAE,CAACK,MAAM,CAACL,SAAS,EAAE,UAAU,CAAC,EAAEZ,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,CAACiB,MAAM,CAACL,SAAS,EAAE,SAAS,CAAC,EAAEE,MAAM,CAAC,EAAED,SAAS,CAAC;IAC1I,OAAO,aAAaZ,KAAK,CAACiB,aAAa,CAAC,KAAK,EAAE;MAC7CL,SAAS,EAAEG;IACb,CAAC,EAAE,aAAaf,KAAK,CAACiB,aAAa,CAACd,OAAO,EAAEL,QAAQ,CAAC;MACpDa,SAAS,EAAE,EAAE,CAACK,MAAM,CAACL,SAAS,EAAE,QAAQ;IAC1C,CAAC,EAAEG,UAAU,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,OAAO,aAAad,KAAK,CAACiB,aAAa,CAACb,cAAc,EAAE,IAAI,EAAEG,mBAAmB,CAAC;AACpF,CAAC;AAEDF,aAAa,CAACa,YAAY,GAAG;EAC3BC,IAAI,EAAE;AACR,CAAC;AACD,eAAed,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}