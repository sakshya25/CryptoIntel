{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport copy from 'copy-to-clipboard';\nimport omit from \"rc-util/es/omit\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport ResizeObserver from 'rc-resize-observer';\nimport { configConsumerProps, ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport devWarning from '../_util/devWarning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Tooltip from '../tooltip';\nimport Typography from './Typography';\nimport Editable from './Editable';\nimport measure from './util';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n    code = _ref.code,\n    underline = _ref.underline,\n    del = _ref[\"delete\"],\n    strong = _ref.strong,\n    keyboard = _ref.keyboard,\n    italic = _ref.italic;\n  var currentContent = content;\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  wrap(italic, 'i');\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/function (_React$Component) {\n  _inherits(Base, _React$Component);\n  var _super = _createSuper(Base);\n  function Base() {\n    var _this;\n    _classCallCheck(this, Base);\n    _this = _super.apply(this, arguments);\n    _this.contentRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      edit: false,\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false\n    };\n    _this.getPrefixCls = function () {\n      var customizePrefixCls = _this.props.prefixCls;\n      var getPrefixCls = _this.context.getPrefixCls;\n      return getPrefixCls('typography', customizePrefixCls);\n    }; // =============== Expand ===============\n\n    _this.onExpandClick = function (e) {\n      var _a;\n      var _this$getEllipsis = _this.getEllipsis(),\n        onExpand = _this$getEllipsis.onExpand;\n      _this.setState({\n        expanded: true\n      });\n      (_a = onExpand) === null || _a === void 0 ? void 0 : _a(e);\n    }; // ================ Edit ================\n\n    _this.onEditClick = function (e) {\n      e.preventDefault();\n      _this.triggerEdit(true);\n    };\n    _this.onEditChange = function (value) {\n      var _this$getEditable = _this.getEditable(),\n        onChange = _this$getEditable.onChange;\n      onChange === null || onChange === void 0 ? void 0 : onChange(value);\n      _this.triggerEdit(false);\n    };\n    _this.onEditCancel = function () {\n      var _a, _b;\n      (_b = (_a = _this.getEditable()).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n      _this.triggerEdit(false);\n    }; // ================ Copy ================\n\n    _this.onCopyClick = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n        children = _this$props.children,\n        copyable = _this$props.copyable;\n      var copyConfig = _extends({}, _typeof(copyable) === 'object' ? copyable : null);\n      if (copyConfig.text === undefined) {\n        copyConfig.text = String(children);\n      }\n      copy(copyConfig.text || '');\n      _this.setState({\n        copied: true\n      }, function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n        _this.copyId = window.setTimeout(function () {\n          _this.setState({\n            copied: false\n          });\n        }, 3000);\n      });\n    };\n    _this.setEditRef = function (node) {\n      _this.editIcon = node;\n    };\n    _this.triggerEdit = function (edit) {\n      var _this$getEditable2 = _this.getEditable(),\n        onStart = _this$getEditable2.onStart;\n      if (edit && onStart) {\n        onStart();\n      }\n      _this.setState({\n        edit: edit\n      }, function () {\n        if (!edit && _this.editIcon) {\n          _this.editIcon.focus();\n        }\n      });\n    }; // ============== Ellipsis ==============\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.rafId);\n      _this.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        _this.syncEllipsis();\n      });\n    };\n    return _this;\n  }\n  _createClass(Base, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        clientRendered: true\n      });\n      this.resizeOnNextFrame();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var children = this.props.children;\n      var ellipsis = this.getEllipsis();\n      var prevEllipsis = this.getEllipsis(prevProps);\n      if (children !== prevProps.children || ellipsis.rows !== prevEllipsis.rows) {\n        this.resizeOnNextFrame();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this.copyId);\n      raf.cancel(this.rafId);\n    }\n  }, {\n    key: \"getEditable\",\n    value: function getEditable(props) {\n      var edit = this.state.edit;\n      var _ref2 = props || this.props,\n        editable = _ref2.editable;\n      if (!editable) return {\n        editing: edit\n      };\n      return _extends({\n        editing: edit\n      }, _typeof(editable) === 'object' ? editable : null);\n    }\n  }, {\n    key: \"getEllipsis\",\n    value: function getEllipsis(props) {\n      var _ref3 = props || this.props,\n        ellipsis = _ref3.ellipsis;\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    }\n  }, {\n    key: \"canUseCSSEllipsis\",\n    value: function canUseCSSEllipsis() {\n      var clientRendered = this.state.clientRendered;\n      var _this$props2 = this.props,\n        editable = _this$props2.editable,\n        copyable = _this$props2.copyable;\n      var _this$getEllipsis2 = this.getEllipsis(),\n        rows = _this$getEllipsis2.rows,\n        expandable = _this$getEllipsis2.expandable,\n        suffix = _this$getEllipsis2.suffix,\n        onEllipsis = _this$getEllipsis2.onEllipsis,\n        tooltip = _this$getEllipsis2.tooltip;\n      if (suffix || tooltip) return false; // Can't use css ellipsis since we need to provide the place for button\n\n      if (editable || copyable || expandable || !clientRendered || onEllipsis) {\n        return false;\n      }\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n      return isLineClampSupport;\n    }\n  }, {\n    key: \"syncEllipsis\",\n    value: function syncEllipsis() {\n      var _this$state = this.state,\n        ellipsisText = _this$state.ellipsisText,\n        isEllipsis = _this$state.isEllipsis,\n        expanded = _this$state.expanded;\n      var _this$getEllipsis3 = this.getEllipsis(),\n        rows = _this$getEllipsis3.rows,\n        suffix = _this$getEllipsis3.suffix,\n        onEllipsis = _this$getEllipsis3.onEllipsis;\n      var children = this.props.children;\n      if (!rows || rows < 0 || !this.contentRef.current || expanded) return; // Do not measure if css already support ellipsis\n\n      if (this.canUseCSSEllipsis()) return;\n      devWarning(toArray(children).every(function (child) {\n        return typeof child === 'string';\n      }), 'Typography', '`ellipsis` should use string as children only.');\n      var _measure = measure(this.contentRef.current, {\n          rows: rows,\n          suffix: suffix\n        }, children, this.renderOperations(true), ELLIPSIS_STR),\n        content = _measure.content,\n        text = _measure.text,\n        ellipsis = _measure.ellipsis;\n      if (ellipsisText !== text || isEllipsis !== ellipsis) {\n        this.setState({\n          ellipsisText: text,\n          ellipsisContent: content,\n          isEllipsis: ellipsis\n        });\n        if (isEllipsis !== ellipsis && onEllipsis) {\n          onEllipsis(ellipsis);\n        }\n      }\n    }\n  }, {\n    key: \"renderExpand\",\n    value: function renderExpand(forceRender) {\n      var _this$getEllipsis4 = this.getEllipsis(),\n        expandable = _this$getEllipsis4.expandable,\n        symbol = _this$getEllipsis4.symbol;\n      var _this$state2 = this.state,\n        expanded = _this$state2.expanded,\n        isEllipsis = _this$state2.isEllipsis;\n      if (!expandable) return null; // force render expand icon for measure usage or it will cause dead loop\n\n      if (!forceRender && (expanded || !isEllipsis)) return null;\n      var expandContent;\n      if (symbol) {\n        expandContent = symbol;\n      } else {\n        expandContent = this.expandStr;\n      }\n      return /*#__PURE__*/React.createElement(\"a\", {\n        key: \"expand\",\n        className: \"\".concat(this.getPrefixCls(), \"-expand\"),\n        onClick: this.onExpandClick,\n        \"aria-label\": this.expandStr\n      }, expandContent);\n    }\n  }, {\n    key: \"renderEdit\",\n    value: function renderEdit() {\n      var editable = this.props.editable;\n      if (!editable) return;\n      var icon = editable.icon,\n        tooltip = editable.tooltip;\n      var title = toArray(tooltip)[0] || this.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"edit\",\n        title: tooltip === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        ref: this.setEditRef,\n        className: \"\".concat(this.getPrefixCls(), \"-edit\"),\n        onClick: this.onEditClick,\n        \"aria-label\": ariaLabel\n      }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n        role: \"button\"\n      })));\n    }\n  }, {\n    key: \"renderCopy\",\n    value: function renderCopy() {\n      var copied = this.state.copied;\n      var copyable = this.props.copyable;\n      if (!copyable) return;\n      var prefixCls = this.getPrefixCls();\n      var tooltips = copyable.tooltips,\n        icon = copyable.icon;\n      var tooltipNodes = Array.isArray(tooltips) ? tooltips : [tooltips];\n      var iconNodes = Array.isArray(icon) ? icon : [icon];\n      var title = copied ? getNode(tooltipNodes[1], this.copiedStr) : getNode(tooltipNodes[0], this.copyStr);\n      var systemStr = copied ? this.copiedStr : this.copyStr;\n      var ariaLabel = typeof title === 'string' ? title : systemStr;\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"copy\",\n        title: title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n        onClick: this.onCopyClick,\n        \"aria-label\": ariaLabel\n      }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n    }\n  }, {\n    key: \"renderEditInput\",\n    value: function renderEditInput() {\n      var _this$props3 = this.props,\n        children = _this$props3.children,\n        className = _this$props3.className,\n        style = _this$props3.style;\n      var direction = this.context.direction;\n      var _this$getEditable3 = this.getEditable(),\n        maxLength = _this$getEditable3.maxLength,\n        autoSize = _this$getEditable3.autoSize,\n        onEnd = _this$getEditable3.onEnd;\n      return /*#__PURE__*/React.createElement(Editable, {\n        value: typeof children === 'string' ? children : '',\n        onSave: this.onEditChange,\n        onCancel: this.onEditCancel,\n        onEnd: onEnd,\n        prefixCls: this.getPrefixCls(),\n        className: className,\n        style: style,\n        direction: direction,\n        maxLength: maxLength,\n        autoSize: autoSize\n      });\n    }\n  }, {\n    key: \"renderOperations\",\n    value: function renderOperations(forceRenderExpanded) {\n      return [this.renderExpand(forceRenderExpanded), this.renderEdit(), this.renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n      var _this$state3 = this.state,\n        ellipsisContent = _this$state3.ellipsisContent,\n        isEllipsis = _this$state3.isEllipsis,\n        expanded = _this$state3.expanded;\n      var _a = this.props,\n        component = _a.component,\n        children = _a.children,\n        className = _a.className,\n        type = _a.type,\n        disabled = _a.disabled,\n        style = _a.style,\n        restProps = __rest(_a, [\"component\", \"children\", \"className\", \"type\", \"disabled\", \"style\"]);\n      var direction = this.context.direction;\n      var _this$getEllipsis5 = this.getEllipsis(),\n        rows = _this$getEllipsis5.rows,\n        suffix = _this$getEllipsis5.suffix,\n        tooltip = _this$getEllipsis5.tooltip;\n      var prefixCls = this.getPrefixCls();\n      var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic'].concat(_toConsumableArray(configConsumerProps)));\n      var cssEllipsis = this.canUseCSSEllipsis();\n      var cssTextOverflow = rows === 1 && cssEllipsis;\n      var cssLineClamp = rows && rows > 1 && cssEllipsis;\n      var textNode = children; // Only use js ellipsis when css ellipsis not support\n\n      if (rows && isEllipsis && !expanded && !cssEllipsis) {\n        var title = restProps.title;\n        var restContent = title || '';\n        if (!title && (typeof children === 'string' || typeof children === 'number')) {\n          restContent = String(children);\n        } // show rest content as title on symbol\n\n        restContent = restContent.slice(String(ellipsisContent || '').length); // We move full content to outer element to avoid repeat read the content by accessibility\n\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, ellipsisContent, /*#__PURE__*/React.createElement(\"span\", {\n          title: restContent,\n          \"aria-hidden\": \"true\"\n        }, ELLIPSIS_STR), suffix); // If provided tooltip, we need wrap with span to let Tooltip inject events\n\n        if (tooltip) {\n          textNode = /*#__PURE__*/React.createElement(Tooltip, {\n            title: tooltip === true ? children : tooltip\n          }, /*#__PURE__*/React.createElement(\"span\", null, textNode));\n        }\n      } else {\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, children, suffix);\n      }\n      textNode = wrapperDecorations(this.props, textNode);\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Text\"\n      }, function (_ref4) {\n        var _classNames;\n        var edit = _ref4.edit,\n          copyStr = _ref4.copy,\n          copied = _ref4.copied,\n          expand = _ref4.expand;\n        _this2.editStr = edit;\n        _this2.copyStr = copyStr;\n        _this2.copiedStr = copied;\n        _this2.expandStr = expand;\n        return /*#__PURE__*/React.createElement(ResizeObserver, {\n          onResize: _this2.resizeOnNextFrame,\n          disabled: cssEllipsis\n        }, /*#__PURE__*/React.createElement(Typography, _extends({\n          className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), rows), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n          style: _extends(_extends({}, style), {\n            WebkitLineClamp: cssLineClamp ? rows : undefined\n          }),\n          component: component,\n          ref: _this2.contentRef,\n          direction: direction\n        }, textProps), textNode, _this2.renderOperations()));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getEditable4 = this.getEditable(),\n        editing = _this$getEditable4.editing;\n      if (editing) {\n        return this.renderEditInput();\n      }\n      return this.renderContent();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var children = nextProps.children,\n        editable = nextProps.editable;\n      devWarning(!editable || typeof children === 'string', 'Typography', 'When `editable` is enabled, the `children` should use string.');\n      return {};\n    }\n  }]);\n  return Base;\n}(React.Component);\nBase.contextType = ConfigContext;\nBase.defaultProps = {\n  children: ''\n};\nexport default Base;","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_typeof","_extends","_classCallCheck","_createClass","_inherits","_createSuper","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","toArray","copy","omit","EditOutlined","CheckOutlined","CopyOutlined","ResizeObserver","configConsumerProps","ConfigContext","LocaleReceiver","devWarning","TransButton","raf","isStyleSupport","Tooltip","Typography","Editable","measure","isLineClampSupport","isTextOverflowSupport","wrapperDecorations","_ref","content","mark","code","underline","del","strong","keyboard","italic","currentContent","wrap","needed","tag","createElement","getNode","dom","defaultNode","needDom","undefined","ELLIPSIS_STR","Base","_React$Component","_super","_this","apply","arguments","contentRef","createRef","state","edit","copied","ellipsisText","ellipsisContent","isEllipsis","expanded","clientRendered","getPrefixCls","customizePrefixCls","props","prefixCls","context","onExpandClick","_a","_this$getEllipsis","getEllipsis","onExpand","setState","onEditClick","preventDefault","triggerEdit","onEditChange","value","_this$getEditable","getEditable","onChange","onEditCancel","_b","onCancel","onCopyClick","_this$props","children","copyable","copyConfig","text","String","onCopy","copyId","window","setTimeout","setEditRef","node","editIcon","_this$getEditable2","onStart","focus","resizeOnNextFrame","cancel","rafId","syncEllipsis","key","componentDidMount","componentDidUpdate","prevProps","ellipsis","prevEllipsis","rows","componentWillUnmount","clearTimeout","_ref2","editable","editing","_ref3","expandable","canUseCSSEllipsis","_this$props2","_this$getEllipsis2","suffix","onEllipsis","tooltip","_this$state","_this$getEllipsis3","current","every","child","_measure","renderOperations","renderExpand","forceRender","_this$getEllipsis4","symbol","_this$state2","expandContent","expandStr","className","concat","onClick","renderEdit","icon","title","editStr","ariaLabel","ref","role","renderCopy","tooltips","tooltipNodes","Array","isArray","iconNodes","copiedStr","copyStr","systemStr","renderEditInput","_this$props3","style","direction","_this$getEditable3","maxLength","autoSize","onEnd","onSave","forceRenderExpanded","filter","renderContent","_this2","_this$state3","component","type","disabled","restProps","_this$getEllipsis5","textProps","cssEllipsis","cssTextOverflow","cssLineClamp","textNode","restContent","slice","Fragment","componentName","_ref4","_classNames","expand","onResize","WebkitLineClamp","render","_this$getEditable4","getDerivedStateFromProps","nextProps","Component","contextType","defaultProps"],"sources":["D:/projects/CryptoIntel/node_modules/antd/es/typography/Base.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport copy from 'copy-to-clipboard';\nimport omit from \"rc-util/es/omit\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport ResizeObserver from 'rc-resize-observer';\nimport { configConsumerProps, ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport devWarning from '../_util/devWarning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Tooltip from '../tooltip';\nimport Typography from './Typography';\nimport Editable from './Editable';\nimport measure from './util';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard,\n      italic = _ref.italic;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  wrap(italic, 'i');\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nvar ELLIPSIS_STR = '...';\n\nvar Base = /*#__PURE__*/function (_React$Component) {\n  _inherits(Base, _React$Component);\n\n  var _super = _createSuper(Base);\n\n  function Base() {\n    var _this;\n\n    _classCallCheck(this, Base);\n\n    _this = _super.apply(this, arguments);\n    _this.contentRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      edit: false,\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false\n    };\n\n    _this.getPrefixCls = function () {\n      var customizePrefixCls = _this.props.prefixCls;\n      var getPrefixCls = _this.context.getPrefixCls;\n      return getPrefixCls('typography', customizePrefixCls);\n    }; // =============== Expand ===============\n\n\n    _this.onExpandClick = function (e) {\n      var _a;\n\n      var _this$getEllipsis = _this.getEllipsis(),\n          onExpand = _this$getEllipsis.onExpand;\n\n      _this.setState({\n        expanded: true\n      });\n\n      (_a = onExpand) === null || _a === void 0 ? void 0 : _a(e);\n    }; // ================ Edit ================\n\n\n    _this.onEditClick = function (e) {\n      e.preventDefault();\n\n      _this.triggerEdit(true);\n    };\n\n    _this.onEditChange = function (value) {\n      var _this$getEditable = _this.getEditable(),\n          onChange = _this$getEditable.onChange;\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(value);\n\n      _this.triggerEdit(false);\n    };\n\n    _this.onEditCancel = function () {\n      var _a, _b;\n\n      (_b = (_a = _this.getEditable()).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n\n      _this.triggerEdit(false);\n    }; // ================ Copy ================\n\n\n    _this.onCopyClick = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          children = _this$props.children,\n          copyable = _this$props.copyable;\n\n      var copyConfig = _extends({}, _typeof(copyable) === 'object' ? copyable : null);\n\n      if (copyConfig.text === undefined) {\n        copyConfig.text = String(children);\n      }\n\n      copy(copyConfig.text || '');\n\n      _this.setState({\n        copied: true\n      }, function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n\n        _this.copyId = window.setTimeout(function () {\n          _this.setState({\n            copied: false\n          });\n        }, 3000);\n      });\n    };\n\n    _this.setEditRef = function (node) {\n      _this.editIcon = node;\n    };\n\n    _this.triggerEdit = function (edit) {\n      var _this$getEditable2 = _this.getEditable(),\n          onStart = _this$getEditable2.onStart;\n\n      if (edit && onStart) {\n        onStart();\n      }\n\n      _this.setState({\n        edit: edit\n      }, function () {\n        if (!edit && _this.editIcon) {\n          _this.editIcon.focus();\n        }\n      });\n    }; // ============== Ellipsis ==============\n\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.rafId);\n      _this.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        _this.syncEllipsis();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Base, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        clientRendered: true\n      });\n      this.resizeOnNextFrame();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var children = this.props.children;\n      var ellipsis = this.getEllipsis();\n      var prevEllipsis = this.getEllipsis(prevProps);\n\n      if (children !== prevProps.children || ellipsis.rows !== prevEllipsis.rows) {\n        this.resizeOnNextFrame();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this.copyId);\n      raf.cancel(this.rafId);\n    }\n  }, {\n    key: \"getEditable\",\n    value: function getEditable(props) {\n      var edit = this.state.edit;\n\n      var _ref2 = props || this.props,\n          editable = _ref2.editable;\n\n      if (!editable) return {\n        editing: edit\n      };\n      return _extends({\n        editing: edit\n      }, _typeof(editable) === 'object' ? editable : null);\n    }\n  }, {\n    key: \"getEllipsis\",\n    value: function getEllipsis(props) {\n      var _ref3 = props || this.props,\n          ellipsis = _ref3.ellipsis;\n\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    }\n  }, {\n    key: \"canUseCSSEllipsis\",\n    value: function canUseCSSEllipsis() {\n      var clientRendered = this.state.clientRendered;\n      var _this$props2 = this.props,\n          editable = _this$props2.editable,\n          copyable = _this$props2.copyable;\n\n      var _this$getEllipsis2 = this.getEllipsis(),\n          rows = _this$getEllipsis2.rows,\n          expandable = _this$getEllipsis2.expandable,\n          suffix = _this$getEllipsis2.suffix,\n          onEllipsis = _this$getEllipsis2.onEllipsis,\n          tooltip = _this$getEllipsis2.tooltip;\n\n      if (suffix || tooltip) return false; // Can't use css ellipsis since we need to provide the place for button\n\n      if (editable || copyable || expandable || !clientRendered || onEllipsis) {\n        return false;\n      }\n\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n\n      return isLineClampSupport;\n    }\n  }, {\n    key: \"syncEllipsis\",\n    value: function syncEllipsis() {\n      var _this$state = this.state,\n          ellipsisText = _this$state.ellipsisText,\n          isEllipsis = _this$state.isEllipsis,\n          expanded = _this$state.expanded;\n\n      var _this$getEllipsis3 = this.getEllipsis(),\n          rows = _this$getEllipsis3.rows,\n          suffix = _this$getEllipsis3.suffix,\n          onEllipsis = _this$getEllipsis3.onEllipsis;\n\n      var children = this.props.children;\n      if (!rows || rows < 0 || !this.contentRef.current || expanded) return; // Do not measure if css already support ellipsis\n\n      if (this.canUseCSSEllipsis()) return;\n      devWarning(toArray(children).every(function (child) {\n        return typeof child === 'string';\n      }), 'Typography', '`ellipsis` should use string as children only.');\n\n      var _measure = measure(this.contentRef.current, {\n        rows: rows,\n        suffix: suffix\n      }, children, this.renderOperations(true), ELLIPSIS_STR),\n          content = _measure.content,\n          text = _measure.text,\n          ellipsis = _measure.ellipsis;\n\n      if (ellipsisText !== text || isEllipsis !== ellipsis) {\n        this.setState({\n          ellipsisText: text,\n          ellipsisContent: content,\n          isEllipsis: ellipsis\n        });\n\n        if (isEllipsis !== ellipsis && onEllipsis) {\n          onEllipsis(ellipsis);\n        }\n      }\n    }\n  }, {\n    key: \"renderExpand\",\n    value: function renderExpand(forceRender) {\n      var _this$getEllipsis4 = this.getEllipsis(),\n          expandable = _this$getEllipsis4.expandable,\n          symbol = _this$getEllipsis4.symbol;\n\n      var _this$state2 = this.state,\n          expanded = _this$state2.expanded,\n          isEllipsis = _this$state2.isEllipsis;\n      if (!expandable) return null; // force render expand icon for measure usage or it will cause dead loop\n\n      if (!forceRender && (expanded || !isEllipsis)) return null;\n      var expandContent;\n\n      if (symbol) {\n        expandContent = symbol;\n      } else {\n        expandContent = this.expandStr;\n      }\n\n      return /*#__PURE__*/React.createElement(\"a\", {\n        key: \"expand\",\n        className: \"\".concat(this.getPrefixCls(), \"-expand\"),\n        onClick: this.onExpandClick,\n        \"aria-label\": this.expandStr\n      }, expandContent);\n    }\n  }, {\n    key: \"renderEdit\",\n    value: function renderEdit() {\n      var editable = this.props.editable;\n      if (!editable) return;\n      var icon = editable.icon,\n          tooltip = editable.tooltip;\n      var title = toArray(tooltip)[0] || this.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"edit\",\n        title: tooltip === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        ref: this.setEditRef,\n        className: \"\".concat(this.getPrefixCls(), \"-edit\"),\n        onClick: this.onEditClick,\n        \"aria-label\": ariaLabel\n      }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n        role: \"button\"\n      })));\n    }\n  }, {\n    key: \"renderCopy\",\n    value: function renderCopy() {\n      var copied = this.state.copied;\n      var copyable = this.props.copyable;\n      if (!copyable) return;\n      var prefixCls = this.getPrefixCls();\n      var tooltips = copyable.tooltips,\n          icon = copyable.icon;\n      var tooltipNodes = Array.isArray(tooltips) ? tooltips : [tooltips];\n      var iconNodes = Array.isArray(icon) ? icon : [icon];\n      var title = copied ? getNode(tooltipNodes[1], this.copiedStr) : getNode(tooltipNodes[0], this.copyStr);\n      var systemStr = copied ? this.copiedStr : this.copyStr;\n      var ariaLabel = typeof title === 'string' ? title : systemStr;\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"copy\",\n        title: title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n        onClick: this.onCopyClick,\n        \"aria-label\": ariaLabel\n      }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n    }\n  }, {\n    key: \"renderEditInput\",\n    value: function renderEditInput() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          className = _this$props3.className,\n          style = _this$props3.style;\n      var direction = this.context.direction;\n\n      var _this$getEditable3 = this.getEditable(),\n          maxLength = _this$getEditable3.maxLength,\n          autoSize = _this$getEditable3.autoSize,\n          onEnd = _this$getEditable3.onEnd;\n\n      return /*#__PURE__*/React.createElement(Editable, {\n        value: typeof children === 'string' ? children : '',\n        onSave: this.onEditChange,\n        onCancel: this.onEditCancel,\n        onEnd: onEnd,\n        prefixCls: this.getPrefixCls(),\n        className: className,\n        style: style,\n        direction: direction,\n        maxLength: maxLength,\n        autoSize: autoSize\n      });\n    }\n  }, {\n    key: \"renderOperations\",\n    value: function renderOperations(forceRenderExpanded) {\n      return [this.renderExpand(forceRenderExpanded), this.renderEdit(), this.renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          ellipsisContent = _this$state3.ellipsisContent,\n          isEllipsis = _this$state3.isEllipsis,\n          expanded = _this$state3.expanded;\n\n      var _a = this.props,\n          component = _a.component,\n          children = _a.children,\n          className = _a.className,\n          type = _a.type,\n          disabled = _a.disabled,\n          style = _a.style,\n          restProps = __rest(_a, [\"component\", \"children\", \"className\", \"type\", \"disabled\", \"style\"]);\n\n      var direction = this.context.direction;\n\n      var _this$getEllipsis5 = this.getEllipsis(),\n          rows = _this$getEllipsis5.rows,\n          suffix = _this$getEllipsis5.suffix,\n          tooltip = _this$getEllipsis5.tooltip;\n\n      var prefixCls = this.getPrefixCls();\n      var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic'].concat(_toConsumableArray(configConsumerProps)));\n      var cssEllipsis = this.canUseCSSEllipsis();\n      var cssTextOverflow = rows === 1 && cssEllipsis;\n      var cssLineClamp = rows && rows > 1 && cssEllipsis;\n      var textNode = children; // Only use js ellipsis when css ellipsis not support\n\n      if (rows && isEllipsis && !expanded && !cssEllipsis) {\n        var title = restProps.title;\n        var restContent = title || '';\n\n        if (!title && (typeof children === 'string' || typeof children === 'number')) {\n          restContent = String(children);\n        } // show rest content as title on symbol\n\n\n        restContent = restContent.slice(String(ellipsisContent || '').length); // We move full content to outer element to avoid repeat read the content by accessibility\n\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, ellipsisContent, /*#__PURE__*/React.createElement(\"span\", {\n          title: restContent,\n          \"aria-hidden\": \"true\"\n        }, ELLIPSIS_STR), suffix); // If provided tooltip, we need wrap with span to let Tooltip inject events\n\n        if (tooltip) {\n          textNode = /*#__PURE__*/React.createElement(Tooltip, {\n            title: tooltip === true ? children : tooltip\n          }, /*#__PURE__*/React.createElement(\"span\", null, textNode));\n        }\n      } else {\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, children, suffix);\n      }\n\n      textNode = wrapperDecorations(this.props, textNode);\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Text\"\n      }, function (_ref4) {\n        var _classNames;\n\n        var edit = _ref4.edit,\n            copyStr = _ref4.copy,\n            copied = _ref4.copied,\n            expand = _ref4.expand;\n        _this2.editStr = edit;\n        _this2.copyStr = copyStr;\n        _this2.copiedStr = copied;\n        _this2.expandStr = expand;\n        return /*#__PURE__*/React.createElement(ResizeObserver, {\n          onResize: _this2.resizeOnNextFrame,\n          disabled: cssEllipsis\n        }, /*#__PURE__*/React.createElement(Typography, _extends({\n          className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), rows), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n          style: _extends(_extends({}, style), {\n            WebkitLineClamp: cssLineClamp ? rows : undefined\n          }),\n          component: component,\n          ref: _this2.contentRef,\n          direction: direction\n        }, textProps), textNode, _this2.renderOperations()));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getEditable4 = this.getEditable(),\n          editing = _this$getEditable4.editing;\n\n      if (editing) {\n        return this.renderEditInput();\n      }\n\n      return this.renderContent();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var children = nextProps.children,\n          editable = nextProps.editable;\n      devWarning(!editable || typeof children === 'string', 'Typography', 'When `editable` is enabled, the `children` should use string.');\n      return {};\n    }\n  }]);\n\n  return Base;\n}(React.Component);\n\nBase.contextType = ConfigContext;\nBase.defaultProps = {\n  children: ''\n};\nexport default Base;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}