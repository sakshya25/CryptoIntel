{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\CryptoIntel\\\\src\\\\components\\\\LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst LineChart = ({\n  coinHistory,\n  currentPrice,\n  coinName\n}) => {\n  _s();\n  var _coinHistory$data3;\n  const [selectedRange, setSelectedRange] = useState('30');\n  const [coinTimestamp, setCoinTimestamp] = useState([]);\n  const coinPrice = [];\n  for (let i = 0; i < (coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data = coinHistory.data) === null || _coinHistory$data === void 0 ? void 0 : (_coinHistory$data$his = _coinHistory$data.history) === null || _coinHistory$data$his === void 0 ? void 0 : _coinHistory$data$his.length); i += 1) {\n    var _coinHistory$data, _coinHistory$data$his, _coinHistory$data2;\n    coinPrice.push(coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data2 = coinHistory.data) === null || _coinHistory$data2 === void 0 ? void 0 : _coinHistory$data2.history[i].price);\n  }\n  const generateTimestamp = range => {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - parseInt(range, 5)); // Adjust the start date based on the selected range\n\n    const timestamps = [];\n    for (let i = 0; i <= parseInt(range, 5); i++) {\n      const newDate = new Date(startDate.getTime() + i * 24 * 60 * 60 * 1000);\n      timestamps.push(newDate.toLocaleDateString());\n    }\n    setCoinTimestamp(timestamps);\n  };\n  useEffect(() => {\n    generateTimestamp(selectedRange);\n  }, [selectedRange]);\n  const handleRangeChange = value => {\n    setSelectedRange(value);\n  };\n  const data = {\n    labels: coinTimestamp,\n    datasets: [{\n      label: 'Price In USD',\n      data: coinPrice,\n      fill: false,\n      backgroundColor: '#0071bd',\n      borderColor: '#0071bd'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"chart-title\",\n        children: [coinName, \" Price Chart \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"price-container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"price-change\",\n          children: [\"Change: \", coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data3 = coinHistory.data) === null || _coinHistory$data3 === void 0 ? void 0 : _coinHistory$data3.change, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"current-price\",\n          children: [\"Current \", coinName, \" Price: $ \", currentPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedRange,\n          style: {\n            width: 200,\n            color: 'black'\n          },\n          onChange: handleRangeChange,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"7\",\n            children: \"7 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"30\",\n            children: \"30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"90\",\n            children: \"90 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LineChart, \"Nj1DExfjxf0/FCLhreHyumy9WEg=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Col","Row","Typography","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Option","LineChart","coinHistory","currentPrice","coinName","_s","_coinHistory$data3","selectedRange","setSelectedRange","coinTimestamp","setCoinTimestamp","coinPrice","i","_coinHistory$data","data","_coinHistory$data$his","history","length","_coinHistory$data2","push","price","generateTimestamp","range","startDate","Date","setDate","getDate","parseInt","timestamps","newDate","getTime","toLocaleDateString","handleRangeChange","value","labels","datasets","label","fill","backgroundColor","borderColor","children","className","level","fileName","_jsxFileName","lineNumber","columnNumber","change","span","style","width","color","onChange","_c","$RefreshReg$"],"sources":["D:/projects/CryptoIntel/src/components/LineChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const [selectedRange, setSelectedRange] = useState('30');\r\n  const [coinTimestamp, setCoinTimestamp] = useState([]);\r\n  const coinPrice = [];\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  const generateTimestamp = (range) => {\r\n    const startDate = new Date();\r\n    startDate.setDate(startDate.getDate() - parseInt(range,5)); // Adjust the start date based on the selected range\r\n\r\n    const timestamps = [];\r\n    for (let i = 0; i <= parseInt(range,5); i++) {\r\n      const newDate = new Date(startDate.getTime() + i * 24 * 60 * 60 * 1000);\r\n      timestamps.push(newDate.toLocaleDateString());\r\n    }\r\n    setCoinTimestamp(timestamps);\r\n  };\r\n  useEffect(() => {\r\n    generateTimestamp(selectedRange);\r\n  }, [selectedRange]);\r\n  const handleRangeChange = (value) => {\r\n    setSelectedRange(value);\r\n  };\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Select\r\n            value={selectedRange}\r\n            style={{ width: 200, color: 'black' }}\r\n            onChange={handleRangeChange}\r\n          >\r\n            <Option value=\"7\">7 days</Option>\r\n            <Option value=\"30\">30 days</Option>\r\n            <Option value=\"90\">90 days</Option>\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}