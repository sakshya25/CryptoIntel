{"ast":null,"code":"export function toArray(candidate) {\n  if (candidate === undefined || candidate === false) return [];\n  return Array.isArray(candidate) ? candidate : [candidate];\n}\nexport function getFieldId(namePath, formName) {\n  if (!namePath.length) return undefined;\n  var mergedId = namePath.join('_');\n  return formName ? \"\".concat(formName, \"_\").concat(mergedId) : mergedId;\n}","map":{"version":3,"names":["toArray","candidate","undefined","Array","isArray","getFieldId","namePath","formName","length","mergedId","join","concat"],"sources":["D:/projects/CryptoIntel/node_modules/antd/es/form/util.js"],"sourcesContent":["export function toArray(candidate) {\n  if (candidate === undefined || candidate === false) return [];\n  return Array.isArray(candidate) ? candidate : [candidate];\n}\nexport function getFieldId(namePath, formName) {\n  if (!namePath.length) return undefined;\n  var mergedId = namePath.join('_');\n  return formName ? \"\".concat(formName, \"_\").concat(mergedId) : mergedId;\n}"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,SAAS,EAAE;EACjC,IAAIA,SAAS,KAAKC,SAAS,IAAID,SAAS,KAAK,KAAK,EAAE,OAAO,EAAE;EAC7D,OAAOE,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,GAAGA,SAAS,GAAG,CAACA,SAAS,CAAC;AAC3D;AACA,OAAO,SAASI,UAAUA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC7C,IAAI,CAACD,QAAQ,CAACE,MAAM,EAAE,OAAON,SAAS;EACtC,IAAIO,QAAQ,GAAGH,QAAQ,CAACI,IAAI,CAAC,GAAG,CAAC;EACjC,OAAOH,QAAQ,GAAG,EAAE,CAACI,MAAM,CAACJ,QAAQ,EAAE,GAAG,CAAC,CAACI,MAAM,CAACF,QAAQ,CAAC,GAAGA,QAAQ;AACxE","ignoreList":[]},"metadata":{},"sourceType":"module"}