{"ast":null,"code":"/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.5.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return me._cache.data = me.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","_isDomSupported","J","log10","K","_factorize","L","finiteOrDefault","M","callback","N","_addGrace","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","clipArea","V","renderText","W","unclipArea","X","toFont","Y","_toLeftRightCenter","Z","_alignStartEnd","$","overrides","a0","merge","a1","_capitalize","a2","descriptors","a3","isFunction","a4","_attachContext","a5","_createResolver","a6","_descriptors","a7","mergeIf","a8","uid","a9","debounce","aa","retinaScale","ab","clearCanvas","ac","setsEqual","ad","_elementsEqual","ae","getAngleFromPoint","af","_readValueToProps","ag","_updateBezierControlPoints","ah","_computeSegments","ai","_boundSegments","aj","_steppedInterpolation","ak","_bezierInterpolation","al","_pointInLine","am","_steppedLineTo","an","_bezierCurveTo","ao","drawPoint","ap","addRoundedRectPath","aq","toTRBL","ar","toTRBLCorners","as","_boundSegment","at","_normalizeAngle","au","getRtlAdapter","av","overrideTextDirection","aw","_textX","ax","restoreTextDirection","ay","noop","az","distanceBetweenPoints","aA","_setMinAndMaxByKey","aB","niceNum","aC","almostWhole","aD","almostEquals","aE","_decimalPlaces","aF","_longestText","aG","_filterBetween","aH","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","hidden","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","inflateAmount","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["D:/projects/CryptoIntel/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}